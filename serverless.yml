
service: aws-node-auth0-cognito

provider:
  name: aws
  runtime: nodejs8.10
  region: us-east-1
  deploymentBucket: egp-deploy
  tracing:
    apiGateway: true
  logs:
    restApi: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "cognito-identity:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "cognito-idp:*"
      Resource: "*"
  #apiGateway:
    #restApiId: joe3n338p0
    #restApiRootResourceId: ubqvh9yhnc # Optional
    #websocketApiId: xxxxxxxxxx
    #description: Api authenticatiom
    #restApiResources:
    #  /posts: xxxxxxxxxx
    #  /categories: xxxxxxxxx
plugins:
  - serverless-plugin-split-stacks
custom:
  splitStacks:
    perFunction: true
    perType: false
    perGroupFunction: false
    stackConcurrency: 5 # Controls if enabled and how much stacks are deployed in parallel. Disabled if absent.
    resourceConcurrency: 10 # Controls how much resources are deployed in parallel. Disabled if absent.

functions:
  publicEndpoint:
    handler: handler.publicEndpoint
    events:
      - http:
          path: api/public
          method: get
          integration: lambda
          cors: true
  login:
    handler: handler.login
    events:
      - http:
          path: api/login
          method: get
          integration: lambda
          cors: true
          request:
            parameters:
              querystrings:
                user: true
                password: true
  register:
    handler: handler.RegisterUser
    events:
      - http:
          path: api/register-user
          method: post
          integration: lambda
          cors: true
          request:
            parameters:
              querystrings:
                user: true
                password: true
  auth:
    handler: auth.authorize
  privateEndpoint:
    handler: handler.privateEndpoint
    events:
      - http:
          path: api/private
          method: get
          authorizer: auth
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
  refresh:
    handler: handler.RefreshToken
    events:
      - http:
          path: api/refresh-token
          method: post
          integration: lambda
          cors: true
  update-password:
    handler: handler.changeUserPassword
    events:
      - http:
          path: api/update-password
          method: post
          integration: lambda
          cors: true
  mongotest:
    handler: handler.testDocumentDB
    description: api testmongodb
    memorySize: 3008
    timeout: 300
    environment: ${file(env.yml):${opt:stage,self:provider.stage}}
    vpc:
      securityGroupIds:
        - sg-e0174685
      subnetIds:
        - subnet-4f9a5138
        - subnet-8d7f6aa5
        - subnet-00b34659
    events:
      - http:
          path: api/testmongo
          method: get
          integration: lambda
          cors: true 